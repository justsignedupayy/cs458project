{"ast":null,"code":"var _jsxFileName = \"/Users/osman/Documents/projects/c458p1/frontend/src/SurveyPage.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport { getSurveys, addDoc, collection, db, deleteSurvey } from './firebaseConfig';\nimport SurveyBuilder from './SurveyBuilder';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst styles = {\n  container: {\n    maxWidth: '1000px',\n    margin: '2rem auto',\n    padding: '0 1rem',\n    fontFamily: \"'Segoe UI', Tahoma, Geneva, Verdana, sans-serif\",\n    position: 'relative'\n  },\n  header: {\n    color: '#2c3e50',\n    textAlign: 'center',\n    marginBottom: '2rem'\n  },\n  userInfo: {\n    backgroundColor: '#f8f9fa',\n    padding: '1rem',\n    borderRadius: '8px',\n    marginBottom: '2rem',\n    textAlign: 'center'\n  },\n  surveyGrid: {\n    display: 'grid',\n    gridTemplateColumns: 'repeat(auto-fill, minmax(250px, 1fr))',\n    gap: '1rem',\n    margin: '2rem 0'\n  },\n  surveyCard: {\n    backgroundColor: 'white',\n    borderRadius: '8px',\n    padding: '1.5rem',\n    boxShadow: '0 2px 4px rgba(0,0,0,0.1)',\n    cursor: 'pointer',\n    transition: 'transform 0.2s ease',\n    position: 'relative'\n  },\n  selectedSurvey: {\n    backgroundColor: 'white',\n    borderRadius: '8px',\n    padding: '2rem',\n    margin: '2rem 0',\n    boxShadow: '0 4px 6px rgba(0,0,0,0.1)'\n  },\n  questionCard: {\n    backgroundColor: '#fff',\n    borderRadius: '8px',\n    padding: '1.5rem',\n    margin: '1rem 0',\n    boxShadow: '0 2px 4px rgba(0,0,0,0.05)'\n  },\n  input: {\n    width: '100%',\n    padding: '0.8rem',\n    margin: '0.5rem 0',\n    border: '1px solid #ddd',\n    borderRadius: '4px',\n    fontSize: '1rem'\n  },\n  button: {\n    padding: '0.6rem 1.2rem',\n    margin: '0.5rem',\n    border: 'none',\n    borderRadius: '4px',\n    cursor: 'pointer',\n    transition: 'all 0.3s ease'\n  },\n  primaryButton: {\n    backgroundColor: '#3498db',\n    color: 'white'\n  },\n  errorMessage: {\n    color: '#e74c3c',\n    backgroundColor: '#f8d7da',\n    padding: '1rem',\n    borderRadius: '4px',\n    margin: '1rem 0'\n  },\n  loadingText: {\n    textAlign: 'center',\n    color: '#95a5a6',\n    fontSize: '1.2rem'\n  },\n  required: {\n    color: '#e74c3c',\n    marginLeft: '0.3rem'\n  },\n  slider: {\n    width: '100%',\n    margin: '1rem 0'\n  },\n  radioOption: {\n    display: 'flex',\n    alignItems: 'center',\n    gap: '0.5rem',\n    margin: '0.5rem 0'\n  },\n  dashboardButton: {\n    position: 'absolute',\n    top: '1rem',\n    left: '1rem',\n    padding: '0.6rem 1.2rem',\n    border: 'none',\n    borderRadius: '4px',\n    cursor: 'pointer',\n    backgroundColor: '#2c3e50',\n    color: 'white'\n  },\n  deleteButton: {\n    position: 'absolute',\n    top: '0.5rem',\n    right: '0.5rem',\n    backgroundColor: 'transparent',\n    border: 'none',\n    color: '#e74c3c',\n    cursor: 'pointer',\n    fontSize: '1.2rem',\n    padding: '0.2rem'\n  }\n};\nconst SurveyPage = ({\n  user\n}) => {\n  _s();\n  const navigate = useNavigate();\n  const [surveys, setSurveys] = useState([]);\n  const [selectedSurvey, setSelectedSurvey] = useState(null);\n  const [responses, setResponses] = useState({});\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState(null);\n  const [submissionError, setSubmissionError] = useState(null);\n  useEffect(() => {\n    const fetchSurveys = async () => {\n      try {\n        setLoading(true);\n        if (!user) throw new Error(\"User not authenticated\");\n        const result = await getSurveys(user.uid); // Pass user UID\n        result.success ? setSurveys(result.surveys) : setError(result.error);\n      } catch (err) {\n        setError(err.message);\n      } finally {\n        setLoading(false);\n      }\n    };\n    fetchSurveys();\n  }, [user]);\n\n  // Handle response input\n  const handleResponseChange = (questionIndex, value) => {\n    setResponses({\n      ...responses,\n      [questionIndex]: value\n    });\n  };\n  const handleDeleteSurvey = async (surveyId, e) => {\n    e.stopPropagation();\n    if (window.confirm('Are you sure you want to delete this survey?')) {\n      try {\n        await deleteSurvey(surveyId);\n        setSurveys(surveys.filter(s => s.id !== surveyId));\n        if ((selectedSurvey === null || selectedSurvey === void 0 ? void 0 : selectedSurvey.id) === surveyId) setSelectedSurvey(null);\n      } catch (error) {\n        setError('Failed to delete survey');\n      }\n    }\n  };\n\n  // Handle survey selection\n  const handleSelectSurvey = survey => {\n    setSelectedSurvey(survey);\n    setResponses({}); // Clear previous responses when a new survey is selected\n    setSubmissionError(null);\n  };\n\n  // Render survey questions\n  const renderSurveyQuestions = () => {\n    if (!selectedSurvey) return null;\n    return selectedSurvey.questions.map((question, index) => {\n      switch (question.type) {\n        case 'multiple-choice':\n          return /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"survey-question\",\n            children: [/*#__PURE__*/_jsxDEV(\"p\", {\n              children: [question.text, \" \", question.required && /*#__PURE__*/_jsxDEV(\"span\", {\n                className: \"required\",\n                children: \"*\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 195,\n                columnNumber: 56\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 195,\n              columnNumber: 15\n            }, this), question.options.map((option, optIndex) => /*#__PURE__*/_jsxDEV(\"label\", {\n              children: [/*#__PURE__*/_jsxDEV(\"input\", {\n                type: \"radio\",\n                name: `question-${index}`,\n                value: option,\n                checked: responses[index] === option,\n                onChange: () => handleResponseChange(index, option),\n                required: question.required\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 198,\n                columnNumber: 19\n              }, this), option]\n            }, optIndex, true, {\n              fileName: _jsxFileName,\n              lineNumber: 197,\n              columnNumber: 17\n            }, this))]\n          }, index, true, {\n            fileName: _jsxFileName,\n            lineNumber: 194,\n            columnNumber: 13\n          }, this);\n        case 'rating-scale':\n          return /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"survey-question\",\n            children: [/*#__PURE__*/_jsxDEV(\"p\", {\n              children: [question.text, \" \", question.required && /*#__PURE__*/_jsxDEV(\"span\", {\n                className: \"required\",\n                children: \"*\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 215,\n                columnNumber: 56\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 215,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"range\",\n              min: question.min || 1,\n              max: question.max || 5,\n              value: responses[index] || question.min || 1,\n              onChange: e => handleResponseChange(index, e.target.value),\n              required: question.required\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 216,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n              children: [\"Rating: \", responses[index] || question.min || 1]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 224,\n              columnNumber: 15\n            }, this)]\n          }, index, true, {\n            fileName: _jsxFileName,\n            lineNumber: 214,\n            columnNumber: 13\n          }, this);\n        case 'conditional':\n          const dependsOnQuestion = selectedSurvey.questions.find(q => q.text === question.dependsOn);\n          const dependsOnIndex = dependsOnQuestion ? selectedSurvey.questions.indexOf(dependsOnQuestion) : -1;\n          const shouldShowQuestion = dependsOnIndex !== -1 && responses[dependsOnIndex] === question.condition;\n          if (!shouldShowQuestion) return null;\n          return /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"survey-question\",\n            children: [/*#__PURE__*/_jsxDEV(\"p\", {\n              children: [question.text, \" \", question.required && /*#__PURE__*/_jsxDEV(\"span\", {\n                className: \"required\",\n                children: \"*\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 237,\n                columnNumber: 56\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 237,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"text\",\n              value: responses[index] || '',\n              onChange: e => handleResponseChange(index, e.target.value),\n              required: question.required\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 238,\n              columnNumber: 15\n            }, this)]\n          }, index, true, {\n            fileName: _jsxFileName,\n            lineNumber: 236,\n            columnNumber: 13\n          }, this);\n        default:\n          return null;\n      }\n    });\n  };\n\n  // Submit survey responses\n  const submitSurveyResponse = async () => {\n    if (!selectedSurvey) {\n      setSubmissionError(\"Please select a survey to submit.\");\n      return;\n    }\n\n    // Validate required questions\n    const requiredQuestions = selectedSurvey.questions.filter(q => q.required);\n    const allRequiredAnswered = requiredQuestions.every((question, index) => {\n      const responseKey = selectedSurvey.questions.findIndex(q => q === question);\n      return responses.hasOwnProperty(responseKey) && responses[responseKey] !== undefined && responses[responseKey] !== '';\n    });\n    if (!allRequiredAnswered) {\n      setSubmissionError(\"Please answer all required questions.\");\n      return;\n    }\n    setSubmissionError(null);\n    try {\n      if (!user) {\n        throw new Error(\"User not authenticated\");\n      }\n\n      // Add response submission logic to Firestore\n      await addDoc(collection(db, 'survey-responses'), {\n        surveyId: selectedSurvey.id,\n        userId: user.uid,\n        responses,\n        submittedAt: new Date()\n      });\n      alert('Survey submitted successfully!');\n      // Reset form\n      setResponses({});\n      setSelectedSurvey(null);\n    } catch (error) {\n      console.error('Error submitting survey:', error);\n      setSubmissionError(`Failed to submit survey: ${error.message}`);\n    }\n  };\n  if (loading) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      style: styles.loadingText,\n      children: \"Loading surveys...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 298,\n      columnNumber: 12\n    }, this);\n  }\n  if (error) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      style: styles.container,\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        style: styles.errorMessage,\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          children: \"Error\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 305,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: error\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 306,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"Please ensure you are logged in and have the necessary permissions.\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 307,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 304,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 303,\n      columnNumber: 7\n    }, this);\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: styles.container,\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      style: styles.header,\n      children: \"Survey Management\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 315,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      style: styles.userInfo,\n      children: /*#__PURE__*/_jsxDEV(\"h2\", {\n        children: [\"Welcome, \", user.displayName || user.email]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 318,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 317,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        style: {\n          marginBottom: '1rem'\n        },\n        children: \"Available Surveys\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 322,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        style: styles.surveyGrid,\n        children: surveys.length === 0 ? /*#__PURE__*/_jsxDEV(\"p\", {\n          style: {\n            textAlign: 'center'\n          },\n          children: \"No surveys available. Create a new survey below!\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 325,\n          columnNumber: 13\n        }, this) : surveys.map(survey => /*#__PURE__*/_jsxDEV(\"div\", {\n          style: {\n            ...styles.surveyCard,\n            border: (selectedSurvey === null || selectedSurvey === void 0 ? void 0 : selectedSurvey.id) === survey.id ? '2px solid #3498db' : 'none'\n          },\n          onClick: () => handleSelectSurvey(survey),\n          children: [/*#__PURE__*/_jsxDEV(\"button\", {\n            style: styles.deleteButton,\n            onClick: e => handleDeleteSurvey(survey.id, e),\n            title: \"Delete survey\",\n            children: \"\\xD7\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 336,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n            children: survey.title\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 343,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            style: {\n              color: '#95a5a6'\n            },\n            children: [survey.questions.length, \" questions\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 344,\n            columnNumber: 17\n          }, this)]\n        }, survey.id, true, {\n          fileName: _jsxFileName,\n          lineNumber: 328,\n          columnNumber: 15\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 323,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 321,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        margin: '3rem 0'\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        style: {\n          marginBottom: '1rem'\n        },\n        children: \"Create New Survey\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 354,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(SurveyBuilder, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 355,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 353,\n      columnNumber: 7\n    }, this), selectedSurvey && /*#__PURE__*/_jsxDEV(\"div\", {\n      style: styles.selectedSurvey,\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        style: {\n          marginBottom: '1.5rem'\n        },\n        children: [\"Take Survey: \", selectedSurvey.title]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 360,\n        columnNumber: 11\n      }, this), renderSurveyQuestions(), submissionError && /*#__PURE__*/_jsxDEV(\"div\", {\n        style: styles.errorMessage,\n        children: submissionError\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 362,\n        columnNumber: 31\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: submitSurveyResponse,\n        style: {\n          ...styles.button,\n          ...styles.primaryButton,\n          padding: '1rem 2rem',\n          fontSize: '1.1rem',\n          width: '100%',\n          marginTop: '2rem'\n        },\n        children: \"Submit Survey\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 363,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 359,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 314,\n    columnNumber: 5\n  }, this);\n};\n_s(SurveyPage, \"0NKrwap0INjGyMo2d0n2wxdpYtE=\", false, function () {\n  return [useNavigate];\n});\n_c = SurveyPage;\nexport default SurveyPage;\nvar _c;\n$RefreshReg$(_c, \"SurveyPage\");","map":{"version":3,"names":["React","useState","useEffect","useNavigate","getSurveys","addDoc","collection","db","deleteSurvey","SurveyBuilder","jsxDEV","_jsxDEV","styles","container","maxWidth","margin","padding","fontFamily","position","header","color","textAlign","marginBottom","userInfo","backgroundColor","borderRadius","surveyGrid","display","gridTemplateColumns","gap","surveyCard","boxShadow","cursor","transition","selectedSurvey","questionCard","input","width","border","fontSize","button","primaryButton","errorMessage","loadingText","required","marginLeft","slider","radioOption","alignItems","dashboardButton","top","left","deleteButton","right","SurveyPage","user","_s","navigate","surveys","setSurveys","setSelectedSurvey","responses","setResponses","loading","setLoading","error","setError","submissionError","setSubmissionError","fetchSurveys","Error","result","uid","success","err","message","handleResponseChange","questionIndex","value","handleDeleteSurvey","surveyId","e","stopPropagation","window","confirm","filter","s","id","handleSelectSurvey","survey","renderSurveyQuestions","questions","map","question","index","type","className","children","text","fileName","_jsxFileName","lineNumber","columnNumber","options","option","optIndex","name","checked","onChange","min","max","target","dependsOnQuestion","find","q","dependsOn","dependsOnIndex","indexOf","shouldShowQuestion","condition","submitSurveyResponse","requiredQuestions","allRequiredAnswered","every","responseKey","findIndex","hasOwnProperty","undefined","userId","submittedAt","Date","alert","console","style","displayName","email","length","onClick","title","marginTop","_c","$RefreshReg$"],"sources":["/Users/osman/Documents/projects/c458p1/frontend/src/SurveyPage.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport {\n  getSurveys,\n  addDoc,\n  collection,\n  db,\n  deleteSurvey\n} from './firebaseConfig';\nimport SurveyBuilder from './SurveyBuilder';\n\nconst styles = {\n  container: {\n    maxWidth: '1000px',\n    margin: '2rem auto',\n    padding: '0 1rem',\n    fontFamily: \"'Segoe UI', Tahoma, Geneva, Verdana, sans-serif\",\n    position: 'relative',\n  },\n  header: {\n    color: '#2c3e50',\n    textAlign: 'center',\n    marginBottom: '2rem',\n  },\n  userInfo: {\n    backgroundColor: '#f8f9fa',\n    padding: '1rem',\n    borderRadius: '8px',\n    marginBottom: '2rem',\n    textAlign: 'center',\n  },\n  surveyGrid: {\n    display: 'grid',\n    gridTemplateColumns: 'repeat(auto-fill, minmax(250px, 1fr))',\n    gap: '1rem',\n    margin: '2rem 0',\n  },\n  surveyCard: {\n    backgroundColor: 'white',\n    borderRadius: '8px',\n    padding: '1.5rem',\n    boxShadow: '0 2px 4px rgba(0,0,0,0.1)',\n    cursor: 'pointer',\n    transition: 'transform 0.2s ease',\n    position: 'relative',\n  },\n  selectedSurvey: {\n    backgroundColor: 'white',\n    borderRadius: '8px',\n    padding: '2rem',\n    margin: '2rem 0',\n    boxShadow: '0 4px 6px rgba(0,0,0,0.1)',\n  },\n  questionCard: {\n    backgroundColor: '#fff',\n    borderRadius: '8px',\n    padding: '1.5rem',\n    margin: '1rem 0',\n    boxShadow: '0 2px 4px rgba(0,0,0,0.05)',\n  },\n  input: {\n    width: '100%',\n    padding: '0.8rem',\n    margin: '0.5rem 0',\n    border: '1px solid #ddd',\n    borderRadius: '4px',\n    fontSize: '1rem',\n  },\n  button: {\n    padding: '0.6rem 1.2rem',\n    margin: '0.5rem',\n    border: 'none',\n    borderRadius: '4px',\n    cursor: 'pointer',\n    transition: 'all 0.3s ease',\n  },\n  primaryButton: {\n    backgroundColor: '#3498db',\n    color: 'white',\n  },\n  errorMessage: {\n    color: '#e74c3c',\n    backgroundColor: '#f8d7da',\n    padding: '1rem',\n    borderRadius: '4px',\n    margin: '1rem 0',\n  },\n  loadingText: {\n    textAlign: 'center',\n    color: '#95a5a6',\n    fontSize: '1.2rem',\n  },\n  required: {\n    color: '#e74c3c',\n    marginLeft: '0.3rem',\n  },\n  slider: {\n    width: '100%',\n    margin: '1rem 0',\n  },\n  radioOption: {\n    display: 'flex',\n    alignItems: 'center',\n    gap: '0.5rem',\n    margin: '0.5rem 0',\n  },\n  dashboardButton: {\n    position: 'absolute',\n    top: '1rem',\n    left: '1rem',\n    padding: '0.6rem 1.2rem',\n    border: 'none',\n    borderRadius: '4px',\n    cursor: 'pointer',\n    backgroundColor: '#2c3e50',\n    color: 'white',\n  },\n  deleteButton: {\n    position: 'absolute',\n    top: '0.5rem',\n    right: '0.5rem',\n    backgroundColor: 'transparent',\n    border: 'none',\n    color: '#e74c3c',\n    cursor: 'pointer',\n    fontSize: '1.2rem',\n    padding: '0.2rem',\n  }\n};\n\n\nconst SurveyPage = ({ user }) => {\n  const navigate = useNavigate();\n  const [surveys, setSurveys] = useState([]);\n  const [selectedSurvey, setSelectedSurvey] = useState(null);\n  const [responses, setResponses] = useState({});\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState(null);\n  const [submissionError, setSubmissionError] = useState(null);\n\n  useEffect(() => {\n    const fetchSurveys = async () => {\n      try {\n        setLoading(true);\n        if (!user) throw new Error(\"User not authenticated\");\n        \n        const result = await getSurveys(user.uid);  // Pass user UID\n        result.success ? setSurveys(result.surveys) : setError(result.error);\n      } catch (err) {\n        setError(err.message);\n      } finally {\n        setLoading(false);\n      }\n    };\n    fetchSurveys();\n  }, [user]);\n\n  // Handle response input\n  const handleResponseChange = (questionIndex, value) => {\n    setResponses({\n      ...responses,\n      [questionIndex]: value\n    });\n  };\n\n  const handleDeleteSurvey = async (surveyId, e) => {\n    e.stopPropagation();\n    if (window.confirm('Are you sure you want to delete this survey?')) {\n      try {\n        await deleteSurvey(surveyId);\n        setSurveys(surveys.filter(s => s.id !== surveyId));\n        if (selectedSurvey?.id === surveyId) setSelectedSurvey(null);\n      } catch (error) {\n        setError('Failed to delete survey');\n      }\n    }\n  };\n\n  // Handle survey selection\n  const handleSelectSurvey = (survey) => {\n    setSelectedSurvey(survey);\n    setResponses({}); // Clear previous responses when a new survey is selected\n    setSubmissionError(null);\n  };\n\n  // Render survey questions\n  const renderSurveyQuestions = () => {\n    if (!selectedSurvey) return null;\n\n    return selectedSurvey.questions.map((question, index) => {\n      switch (question.type) {\n        case 'multiple-choice':\n          return (\n            <div key={index} className=\"survey-question\">\n              <p>{question.text} {question.required && <span className=\"required\">*</span>}</p>\n              {question.options.map((option, optIndex) => (\n                <label key={optIndex}>\n                  <input\n                    type=\"radio\"\n                    name={`question-${index}`}\n                    value={option}\n                    checked={responses[index] === option}\n                    onChange={() => handleResponseChange(index, option)}\n                    required={question.required}\n                  />\n                  {option}\n                </label>\n              ))}\n            </div>\n          );\n\n        case 'rating-scale':\n          return (\n            <div key={index} className=\"survey-question\">\n              <p>{question.text} {question.required && <span className=\"required\">*</span>}</p>\n              <input\n                type=\"range\"\n                min={question.min || 1}\n                max={question.max || 5}\n                value={responses[index] || question.min || 1}\n                onChange={(e) => handleResponseChange(index, e.target.value)}\n                required={question.required}\n              />\n              <span>Rating: {responses[index] || question.min || 1}</span>\n            </div>\n          );\n\n        case 'conditional':\n          const dependsOnQuestion = selectedSurvey.questions.find(q => q.text === question.dependsOn);\n          const dependsOnIndex = dependsOnQuestion ? selectedSurvey.questions.indexOf(dependsOnQuestion) : -1;\n          const shouldShowQuestion = dependsOnIndex !== -1 && responses[dependsOnIndex] === question.condition;\n\n          if (!shouldShowQuestion) return null;\n\n          return (\n            <div key={index} className=\"survey-question\">\n              <p>{question.text} {question.required && <span className=\"required\">*</span>}</p>\n              <input\n                type=\"text\"\n                value={responses[index] || ''}\n                onChange={(e) => handleResponseChange(index, e.target.value)}\n                required={question.required}\n              />\n            </div>\n          );\n\n        default:\n          return null;\n      }\n    });\n  };\n\n  // Submit survey responses\n  const submitSurveyResponse = async () => {\n    if (!selectedSurvey) {\n      setSubmissionError(\"Please select a survey to submit.\");\n      return;\n    }\n\n    // Validate required questions\n    const requiredQuestions = selectedSurvey.questions.filter(q => q.required);\n    const allRequiredAnswered = requiredQuestions.every((question, index) => {\n      const responseKey = selectedSurvey.questions.findIndex(q => q === question);\n      return responses.hasOwnProperty(responseKey) && responses[responseKey] !== undefined && responses[responseKey] !== '';\n    });\n\n    if (!allRequiredAnswered) {\n      setSubmissionError(\"Please answer all required questions.\");\n      return;\n    }\n\n    setSubmissionError(null);\n\n    try {\n      if (!user) {\n        throw new Error(\"User not authenticated\");\n      }\n\n      // Add response submission logic to Firestore\n      await addDoc(collection(db, 'survey-responses'), {\n        surveyId: selectedSurvey.id,\n        userId: user.uid,\n        responses,\n        submittedAt: new Date()\n      });\n\n      alert('Survey submitted successfully!');\n      // Reset form\n      setResponses({});\n      setSelectedSurvey(null);\n    } catch (error) {\n      console.error('Error submitting survey:', error);\n      setSubmissionError(`Failed to submit survey: ${error.message}`);\n    }\n  };\n\n  if (loading) {\n    return <div style={styles.loadingText}>Loading surveys...</div>;\n  }\n\n  if (error) {\n    return (\n      <div style={styles.container}>\n        <div style={styles.errorMessage}>\n          <h2>Error</h2>\n          <p>{error}</p>\n          <p>Please ensure you are logged in and have the necessary permissions.</p>\n        </div>\n      </div>\n    );\n  }\n\n  return (\n    <div style={styles.container}>\n      <h1 style={styles.header}>Survey Management</h1>\n\n      <div style={styles.userInfo}>\n        <h2>Welcome, {user.displayName || user.email}</h2>\n      </div>\n\n      <div>\n        <h2 style={{ marginBottom: '1rem' }}>Available Surveys</h2>\n        <div style={styles.surveyGrid}>\n          {surveys.length === 0 ? (\n            <p style={{ textAlign: 'center' }}>No surveys available. Create a new survey below!</p>\n          ) : (\n            surveys.map((survey) => (\n              <div\n                key={survey.id}\n                style={{\n                  ...styles.surveyCard,\n                  border: selectedSurvey?.id === survey.id ? '2px solid #3498db' : 'none'\n                }}\n                onClick={() => handleSelectSurvey(survey)}\n              >\n                <button\n                  style={styles.deleteButton}\n                  onClick={(e) => handleDeleteSurvey(survey.id, e)}\n                  title=\"Delete survey\"\n                >\n                  ×\n                </button>\n                <h3>{survey.title}</h3>\n                <p style={{ color: '#95a5a6' }}>\n                  {survey.questions.length} questions\n                </p>\n              </div>\n            ))\n          )}\n        </div>\n      </div>\n\n      <div style={{ margin: '3rem 0' }}>\n        <h2 style={{ marginBottom: '1rem' }}>Create New Survey</h2>\n        <SurveyBuilder />\n      </div>\n\n      {selectedSurvey && (\n        <div style={styles.selectedSurvey}>\n          <h2 style={{ marginBottom: '1.5rem' }}>Take Survey: {selectedSurvey.title}</h2>\n          {renderSurveyQuestions()}\n          {submissionError && <div style={styles.errorMessage}>{submissionError}</div>}\n          <button\n            onClick={submitSurveyResponse}\n            style={{\n              ...styles.button,\n              ...styles.primaryButton,\n              padding: '1rem 2rem',\n              fontSize: '1.1rem',\n              width: '100%',\n              marginTop: '2rem'\n            }}\n          >\n            Submit Survey\n          </button>\n        </div>\n      )}\n    </div>\n  );\n};\n\nexport default SurveyPage;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}