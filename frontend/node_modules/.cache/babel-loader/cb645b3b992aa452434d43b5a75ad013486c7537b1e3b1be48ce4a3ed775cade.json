{"ast":null,"code":"var _jsxFileName = \"/Users/osman/Documents/projects/c458p1/frontend/src/SurveyBuilder.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { addSurvey } from './firebaseConfig';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst styles = {\n  container: {\n    maxWidth: '800px',\n    margin: '2rem auto',\n    padding: '0 1rem',\n    fontFamily: \"'Segoe UI', Tahoma, Geneva, Verdana, sans-serif\"\n  },\n  header: {\n    color: '#2c3e50',\n    textAlign: 'center',\n    marginBottom: '2rem'\n  },\n  input: {\n    width: '100%',\n    padding: '0.8rem',\n    margin: '0.5rem 0',\n    border: '1px solid #ddd',\n    borderRadius: '4px',\n    fontSize: '1rem'\n  },\n  button: {\n    padding: '0.6rem 1.2rem',\n    margin: '0.5rem',\n    border: 'none',\n    borderRadius: '4px',\n    cursor: 'pointer',\n    transition: 'all 0.3s ease'\n  },\n  primaryButton: {\n    backgroundColor: '#3498db',\n    color: 'white',\n    '&:hover': {\n      backgroundColor: '#2980b9'\n    }\n  },\n  secondaryButton: {\n    backgroundColor: '#95a5a6',\n    color: 'white',\n    '&:hover': {\n      backgroundColor: '#7f8c8d'\n    }\n  },\n  dangerButton: {\n    backgroundColor: '#e74c3c',\n    color: 'white',\n    '&:hover': {\n      backgroundColor: '#c0392b'\n    }\n  },\n  questionItem: {\n    backgroundColor: 'white',\n    borderRadius: '8px',\n    padding: '1.5rem',\n    margin: '1rem 0',\n    boxShadow: '0 2px 4px rgba(0,0,0,0.1)'\n  },\n  questionHeader: {\n    display: 'flex',\n    justifyContent: 'space-between',\n    alignItems: 'center',\n    marginBottom: '1rem'\n  },\n  optionItem: {\n    display: 'flex',\n    alignItems: 'center',\n    gap: '0.5rem',\n    margin: '0.5rem 0'\n  },\n  errorMessage: {\n    color: '#e74c3c',\n    backgroundColor: '#f8d7da',\n    padding: '1rem',\n    borderRadius: '4px',\n    margin: '1rem 0'\n  },\n  configSection: {\n    margin: '1rem 0',\n    padding: '1rem',\n    backgroundColor: '#f8f9fa',\n    borderRadius: '4px'\n  },\n  label: {\n    display: 'block',\n    margin: '0.5rem 0',\n    fontWeight: '500'\n  }\n};\nconst SurveyBuilder = () => {\n  _s();\n  const [questions, setQuestions] = useState([]);\n  const [validationError, setValidationError] = useState(null);\n  const [surveyTitle, setSurveyTitle] = useState('');\n\n  // Question type interfaces\n  const addMultipleChoiceQuestion = () => {\n    const newQuestion = {\n      type: 'multiple-choice',\n      text: '',\n      options: ['', ''],\n      required: false\n    };\n    setQuestions([...questions, newQuestion]);\n  };\n  const addRatingScaleQuestion = () => {\n    const newQuestion = {\n      type: 'rating-scale',\n      text: '',\n      min: 1,\n      max: 5,\n      required: false\n    };\n    setQuestions([...questions, newQuestion]);\n  };\n  const addConditionalQuestion = () => {\n    const newQuestion = {\n      type: 'conditional',\n      text: '',\n      condition: null,\n      dependsOn: null,\n      required: false\n    };\n    setQuestions([...questions, newQuestion]);\n  };\n  const updateQuestion = (index, updates) => {\n    const updatedQuestions = [...questions];\n    updatedQuestions[index] = {\n      ...updatedQuestions[index],\n      ...updates\n    };\n    setQuestions(updatedQuestions);\n  };\n\n  // --- Missing Functions Start ---\n\n  const removeQuestion = indexToRemove => {\n    const updatedQuestions = questions.filter((_, index) => index !== indexToRemove);\n    setQuestions(updatedQuestions);\n  };\n  const updateQuestionOption = (questionIndex, optionIndex, newOption) => {\n    var _updatedQuestions$que;\n    const updatedQuestions = [...questions];\n    if ((_updatedQuestions$que = updatedQuestions[questionIndex]) !== null && _updatedQuestions$que !== void 0 && _updatedQuestions$que.options) {\n      updatedQuestions[questionIndex].options[optionIndex] = newOption;\n      setQuestions(updatedQuestions);\n    }\n  };\n  const addQuestionOption = questionIndex => {\n    var _updatedQuestions$que2;\n    const updatedQuestions = [...questions];\n    if ((_updatedQuestions$que2 = updatedQuestions[questionIndex]) !== null && _updatedQuestions$que2 !== void 0 && _updatedQuestions$que2.options) {\n      updatedQuestions[questionIndex].options.push('');\n      setQuestions(updatedQuestions);\n    }\n  };\n  const removeQuestionOption = (questionIndex, optionIndex) => {\n    var _updatedQuestions$que3, _updatedQuestions$que4, _updatedQuestions$que5;\n    const updatedQuestions = [...questions];\n    if ((_updatedQuestions$que3 = updatedQuestions[questionIndex]) !== null && _updatedQuestions$que3 !== void 0 && _updatedQuestions$que3.options && updatedQuestions[questionIndex].options.length > 2) {\n      updatedQuestions[questionIndex].options = updatedQuestions[questionIndex].options.filter((_, index) => index !== optionIndex);\n      setQuestions(updatedQuestions);\n    } else if (((_updatedQuestions$que4 = updatedQuestions[questionIndex]) === null || _updatedQuestions$que4 === void 0 ? void 0 : (_updatedQuestions$que5 = _updatedQuestions$que4.options) === null || _updatedQuestions$que5 === void 0 ? void 0 : _updatedQuestions$que5.length) <= 2) {\n      alert(\"Multiple choice questions must have at least two options.\");\n    }\n  };\n  const updateConditionalQuestionDependency = (questionIndex, dependency) => {\n    var _updatedQuestions$que6;\n    const updatedQuestions = [...questions];\n    if (((_updatedQuestions$que6 = updatedQuestions[questionIndex]) === null || _updatedQuestions$que6 === void 0 ? void 0 : _updatedQuestions$que6.type) === 'conditional') {\n      updatedQuestions[questionIndex].dependsOn = dependency;\n      setQuestions(updatedQuestions);\n    }\n  };\n  const updateConditionalQuestionCondition = (questionIndex, condition) => {\n    var _updatedQuestions$que7;\n    const updatedQuestions = [...questions];\n    if (((_updatedQuestions$que7 = updatedQuestions[questionIndex]) === null || _updatedQuestions$que7 === void 0 ? void 0 : _updatedQuestions$que7.type) === 'conditional') {\n      updatedQuestions[questionIndex].condition = condition;\n      setQuestions(updatedQuestions);\n    }\n  };\n\n  // --- Missing Functions End ---\n\n  const validateSurvey = () => {\n    // Basic validation\n    if (!surveyTitle.trim()) {\n      setValidationError('Survey must have a title');\n      return false;\n    }\n    const requiredQuestionsMissing = questions.some(q => q.required && (!q.text || q.text.trim() === ''));\n    if (requiredQuestionsMissing) {\n      setValidationError('Please fill in all required questions');\n      return false;\n    }\n    setValidationError(null);\n    return true;\n  };\n  const submitSurvey = async () => {\n    if (!validateSurvey()) return;\n    try {\n      // Create complete survey object with required fields\n      const surveyData = {\n        title: surveyTitle.trim(),\n        questions: questions.map(q => {\n          var _q$dependsOn, _q$condition;\n          return {\n            ...q,\n            // Ensure question text is trimmed\n            text: q.text.trim(),\n            // Clean conditional question dependencies\n            ...(q.type === 'conditional' && {\n              dependsOn: ((_q$dependsOn = q.dependsOn) === null || _q$dependsOn === void 0 ? void 0 : _q$dependsOn.trim()) || '',\n              condition: ((_q$condition = q.condition) === null || _q$condition === void 0 ? void 0 : _q$condition.trim()) || ''\n            })\n          };\n        }),\n        createdAt: new Date(),\n        createdBy: user.uid // Explicit user reference\n      };\n      const result = await addSurvey(surveyData, user.uid);\n      if (result.success) {\n        // Complete reset of form state\n        setQuestions([]);\n        setSurveyTitle('');\n        setValidationError(null);\n        alert('Survey created successfully!');\n\n        // Optional: Refresh survey list\n        const updatedSurveys = await getSurveys(user.uid);\n        if (updatedSurveys.success) {\n          setSurveys(updatedSurveys.surveys);\n        }\n      } else {\n        setValidationError(result.error || 'Failed to create survey');\n      }\n    } catch (error) {\n      console.error('Submission error:', error);\n      setValidationError(error.message || 'Failed to submit survey');\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: styles.container,\n    children: [/*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      placeholder: \"Enter Survey Title\",\n      value: surveyTitle,\n      onChange: e => setSurveyTitle(e.target.value),\n      style: styles.input\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 254,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        display: 'flex',\n        justifyContent: 'center',\n        gap: '0.5rem'\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: addMultipleChoiceQuestion,\n        style: {\n          ...styles.button,\n          ...styles.primaryButton\n        },\n        children: \"Add Multiple Choice\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 264,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: addRatingScaleQuestion,\n        style: {\n          ...styles.button,\n          ...styles.secondaryButton\n        },\n        children: \"Add Rating Scale\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 270,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: addConditionalQuestion,\n        style: {\n          ...styles.button,\n          ...styles.secondaryButton\n        },\n        children: \"Add Conditional\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 276,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 263,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: questions.map((question, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n        style: styles.questionItem,\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          style: styles.questionHeader,\n          children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n            children: [\"Question \", index + 1, \" (\", question.type.replace('-', ' '), \")\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 289,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: () => removeQuestion(index),\n            style: {\n              ...styles.button,\n              ...styles.dangerButton\n            },\n            children: \"Remove\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 290,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 288,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          placeholder: \"Enter question text\",\n          value: question.text,\n          onChange: e => updateQuestion(index, {\n            text: e.target.value\n          }),\n          style: styles.input\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 298,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          style: styles.configSection,\n          children: [question.type === 'multiple-choice' && /*#__PURE__*/_jsxDEV(\"div\", {\n            children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n              children: \"Options:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 309,\n              columnNumber: 19\n            }, this), question.options.map((option, optionIndex) => /*#__PURE__*/_jsxDEV(\"div\", {\n              style: styles.optionItem,\n              children: [/*#__PURE__*/_jsxDEV(\"input\", {\n                type: \"text\",\n                placeholder: `Option ${optionIndex + 1}`,\n                value: option,\n                onChange: e => updateQuestionOption(index, optionIndex, e.target.value),\n                style: {\n                  ...styles.input,\n                  flex: 1,\n                  margin: 0\n                }\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 312,\n                columnNumber: 23\n              }, this), question.options.length > 2 && /*#__PURE__*/_jsxDEV(\"button\", {\n                onClick: () => removeQuestionOption(index, optionIndex),\n                style: {\n                  ...styles.button,\n                  ...styles.dangerButton,\n                  padding: '0.3rem 0.6rem'\n                },\n                children: \"\\xD7\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 320,\n                columnNumber: 25\n              }, this)]\n            }, optionIndex, true, {\n              fileName: _jsxFileName,\n              lineNumber: 311,\n              columnNumber: 21\n            }, this)), /*#__PURE__*/_jsxDEV(\"button\", {\n              onClick: () => addQuestionOption(index),\n              style: {\n                ...styles.button,\n                ...styles.secondaryButton,\n                marginTop: '0.5rem'\n              },\n              children: \"+ Add Option\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 329,\n              columnNumber: 19\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 308,\n            columnNumber: 17\n          }, this), question.type === 'rating-scale' && /*#__PURE__*/_jsxDEV(\"div\", {\n            style: {\n              display: 'flex',\n              gap: '1rem'\n            },\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                style: styles.label,\n                children: \"Min Value:\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 341,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                type: \"number\",\n                value: question.min,\n                onChange: e => updateQuestion(index, {\n                  min: parseInt(e.target.value)\n                }),\n                style: styles.input\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 342,\n                columnNumber: 21\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 340,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                style: styles.label,\n                children: \"Max Value:\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 350,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                type: \"number\",\n                value: question.max,\n                onChange: e => updateQuestion(index, {\n                  max: parseInt(e.target.value)\n                }),\n                style: styles.input\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 351,\n                columnNumber: 21\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 349,\n              columnNumber: 19\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 339,\n            columnNumber: 17\n          }, this), question.type === 'conditional' && /*#__PURE__*/_jsxDEV(\"div\", {\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              style: {\n                marginBottom: '1rem'\n              },\n              children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                style: styles.label,\n                children: \"Depends On Question:\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 364,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                type: \"text\",\n                placeholder: \"Enter the text of the question this depends on\",\n                value: question.dependsOn,\n                onChange: e => updateConditionalQuestionDependency(index, e.target.value),\n                style: styles.input\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 365,\n                columnNumber: 21\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 363,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                style: styles.label,\n                children: \"Condition:\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 374,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                type: \"text\",\n                placeholder: \"Enter the required answer for the above question\",\n                value: question.condition,\n                onChange: e => updateConditionalQuestionCondition(index, e.target.value),\n                style: styles.input\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 375,\n                columnNumber: 21\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 373,\n              columnNumber: 19\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 362,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n            style: {\n              display: 'flex',\n              alignItems: 'center',\n              gap: '0.5rem',\n              marginTop: '1rem'\n            },\n            children: [/*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"checkbox\",\n              checked: question.required,\n              onChange: e => updateQuestion(index, {\n                required: e.target.checked\n              })\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 387,\n              columnNumber: 17\n            }, this), \"Required Question\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 386,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 306,\n          columnNumber: 13\n        }, this)]\n      }, index, true, {\n        fileName: _jsxFileName,\n        lineNumber: 287,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 285,\n      columnNumber: 7\n    }, this), validationError && /*#__PURE__*/_jsxDEV(\"div\", {\n      style: styles.errorMessage,\n      children: validationError\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 400,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: submitSurvey,\n      style: {\n        ...styles.button,\n        ...styles.primaryButton,\n        width: '100%',\n        padding: '1rem',\n        fontSize: '1.1rem',\n        marginTop: '2rem'\n      },\n      children: \"Save Survey\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 405,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 252,\n    columnNumber: 5\n  }, this);\n};\n_s(SurveyBuilder, \"tldn9N/b+Zogp6rGTMHnjaUPJuQ=\");\n_c = SurveyBuilder;\nexport default SurveyBuilder;\nvar _c;\n$RefreshReg$(_c, \"SurveyBuilder\");","map":{"version":3,"names":["React","useState","addSurvey","jsxDEV","_jsxDEV","styles","container","maxWidth","margin","padding","fontFamily","header","color","textAlign","marginBottom","input","width","border","borderRadius","fontSize","button","cursor","transition","primaryButton","backgroundColor","secondaryButton","dangerButton","questionItem","boxShadow","questionHeader","display","justifyContent","alignItems","optionItem","gap","errorMessage","configSection","label","fontWeight","SurveyBuilder","_s","questions","setQuestions","validationError","setValidationError","surveyTitle","setSurveyTitle","addMultipleChoiceQuestion","newQuestion","type","text","options","required","addRatingScaleQuestion","min","max","addConditionalQuestion","condition","dependsOn","updateQuestion","index","updates","updatedQuestions","removeQuestion","indexToRemove","filter","_","updateQuestionOption","questionIndex","optionIndex","newOption","_updatedQuestions$que","addQuestionOption","_updatedQuestions$que2","push","removeQuestionOption","_updatedQuestions$que3","_updatedQuestions$que4","_updatedQuestions$que5","length","alert","updateConditionalQuestionDependency","dependency","_updatedQuestions$que6","updateConditionalQuestionCondition","_updatedQuestions$que7","validateSurvey","trim","requiredQuestionsMissing","some","q","submitSurvey","surveyData","title","map","_q$dependsOn","_q$condition","createdAt","Date","createdBy","user","uid","result","success","updatedSurveys","getSurveys","setSurveys","surveys","error","console","message","style","children","placeholder","value","onChange","e","target","fileName","_jsxFileName","lineNumber","columnNumber","onClick","question","replace","option","flex","marginTop","parseInt","checked","_c","$RefreshReg$"],"sources":["/Users/osman/Documents/projects/c458p1/frontend/src/SurveyBuilder.js"],"sourcesContent":["import React, { useState } from 'react';\nimport { addSurvey } from './firebaseConfig';\n\nconst styles = {\n  container: {\n    maxWidth: '800px',\n    margin: '2rem auto',\n    padding: '0 1rem',\n    fontFamily: \"'Segoe UI', Tahoma, Geneva, Verdana, sans-serif\",\n  },\n  header: {\n    color: '#2c3e50',\n    textAlign: 'center',\n    marginBottom: '2rem',\n  },\n  input: {\n    width: '100%',\n    padding: '0.8rem',\n    margin: '0.5rem 0',\n    border: '1px solid #ddd',\n    borderRadius: '4px',\n    fontSize: '1rem',\n  },\n  button: {\n    padding: '0.6rem 1.2rem',\n    margin: '0.5rem',\n    border: 'none',\n    borderRadius: '4px',\n    cursor: 'pointer',\n    transition: 'all 0.3s ease',\n  },\n  primaryButton: {\n    backgroundColor: '#3498db',\n    color: 'white',\n    '&:hover': {\n      backgroundColor: '#2980b9',\n    },\n  },\n  secondaryButton: {\n    backgroundColor: '#95a5a6',\n    color: 'white',\n    '&:hover': {\n      backgroundColor: '#7f8c8d',\n    },\n  },\n  dangerButton: {\n    backgroundColor: '#e74c3c',\n    color: 'white',\n    '&:hover': {\n      backgroundColor: '#c0392b',\n    },\n  },\n  questionItem: {\n    backgroundColor: 'white',\n    borderRadius: '8px',\n    padding: '1.5rem',\n    margin: '1rem 0',\n    boxShadow: '0 2px 4px rgba(0,0,0,0.1)',\n  },\n  questionHeader: {\n    display: 'flex',\n    justifyContent: 'space-between',\n    alignItems: 'center',\n    marginBottom: '1rem',\n  },\n  optionItem: {\n    display: 'flex',\n    alignItems: 'center',\n    gap: '0.5rem',\n    margin: '0.5rem 0',\n  },\n  errorMessage: {\n    color: '#e74c3c',\n    backgroundColor: '#f8d7da',\n    padding: '1rem',\n    borderRadius: '4px',\n    margin: '1rem 0',\n  },\n  configSection: {\n    margin: '1rem 0',\n    padding: '1rem',\n    backgroundColor: '#f8f9fa',\n    borderRadius: '4px',\n  },\n  label: {\n    display: 'block',\n    margin: '0.5rem 0',\n    fontWeight: '500',\n  },\n};\n\nconst SurveyBuilder = () => {\n  const [questions, setQuestions] = useState([]);\n  const [validationError, setValidationError] = useState(null);\n  const [surveyTitle, setSurveyTitle] = useState('');\n\n  // Question type interfaces\n  const addMultipleChoiceQuestion = () => {\n    const newQuestion = {\n      type: 'multiple-choice',\n      text: '',\n      options: ['', ''],\n      required: false\n    };\n    setQuestions([...questions, newQuestion]);\n  };\n\n  const addRatingScaleQuestion = () => {\n    const newQuestion = {\n      type: 'rating-scale',\n      text: '',\n      min: 1,\n      max: 5,\n      required: false\n    };\n    setQuestions([...questions, newQuestion]);\n  };\n\n  const addConditionalQuestion = () => {\n    const newQuestion = {\n      type: 'conditional',\n      text: '',\n      condition: null,\n      dependsOn: null,\n      required: false\n    };\n    setQuestions([...questions, newQuestion]);\n  };\n\n  const updateQuestion = (index, updates) => {\n    const updatedQuestions = [...questions];\n    updatedQuestions[index] = { ...updatedQuestions[index], ...updates };\n    setQuestions(updatedQuestions);\n  };\n\n  // --- Missing Functions Start ---\n\n  const removeQuestion = (indexToRemove) => {\n    const updatedQuestions = questions.filter((_, index) => index !== indexToRemove);\n    setQuestions(updatedQuestions);\n  };\n\n  const updateQuestionOption = (questionIndex, optionIndex, newOption) => {\n    const updatedQuestions = [...questions];\n    if (updatedQuestions[questionIndex]?.options) {\n      updatedQuestions[questionIndex].options[optionIndex] = newOption;\n      setQuestions(updatedQuestions);\n    }\n  };\n\n  const addQuestionOption = (questionIndex) => {\n    const updatedQuestions = [...questions];\n    if (updatedQuestions[questionIndex]?.options) {\n      updatedQuestions[questionIndex].options.push('');\n      setQuestions(updatedQuestions);\n    }\n  };\n\n  const removeQuestionOption = (questionIndex, optionIndex) => {\n    const updatedQuestions = [...questions];\n    if (updatedQuestions[questionIndex]?.options && updatedQuestions[questionIndex].options.length > 2) {\n      updatedQuestions[questionIndex].options = updatedQuestions[questionIndex].options.filter((_, index) => index !== optionIndex);\n      setQuestions(updatedQuestions);\n    } else if (updatedQuestions[questionIndex]?.options?.length <= 2) {\n      alert(\"Multiple choice questions must have at least two options.\");\n    }\n  };\n\n  const updateConditionalQuestionDependency = (questionIndex, dependency) => {\n    const updatedQuestions = [...questions];\n    if (updatedQuestions[questionIndex]?.type === 'conditional') {\n      updatedQuestions[questionIndex].dependsOn = dependency;\n      setQuestions(updatedQuestions);\n    }\n  };\n\n  const updateConditionalQuestionCondition = (questionIndex, condition) => {\n    const updatedQuestions = [...questions];\n    if (updatedQuestions[questionIndex]?.type === 'conditional') {\n      updatedQuestions[questionIndex].condition = condition;\n      setQuestions(updatedQuestions);\n    }\n  };\n\n  // --- Missing Functions End ---\n\n  const validateSurvey = () => {\n    // Basic validation\n    if (!surveyTitle.trim()) {\n      setValidationError('Survey must have a title');\n      return false;\n    }\n\n    const requiredQuestionsMissing = questions.some(\n      q => q.required && (!q.text || q.text.trim() === '')\n    );\n\n    if (requiredQuestionsMissing) {\n      setValidationError('Please fill in all required questions');\n      return false;\n    }\n\n    setValidationError(null);\n    return true;\n  };\n\n  const submitSurvey = async () => {\n    if (!validateSurvey()) return;\n  \n    try {\n      // Create complete survey object with required fields\n      const surveyData = {\n        title: surveyTitle.trim(),\n        questions: questions.map(q => ({\n          ...q,\n          // Ensure question text is trimmed\n          text: q.text.trim(),\n          // Clean conditional question dependencies\n          ...(q.type === 'conditional' && {\n            dependsOn: q.dependsOn?.trim() || '',\n            condition: q.condition?.trim() || ''\n          })\n        })),\n        createdAt: new Date(),\n        createdBy: user.uid // Explicit user reference\n      };\n  \n      const result = await addSurvey(surveyData, user.uid);\n  \n      if (result.success) {\n        // Complete reset of form state\n        setQuestions([]);\n        setSurveyTitle('');\n        setValidationError(null);\n        alert('Survey created successfully!');\n        \n        // Optional: Refresh survey list\n        const updatedSurveys = await getSurveys(user.uid);\n        if (updatedSurveys.success) {\n          setSurveys(updatedSurveys.surveys);\n        }\n      } else {\n        setValidationError(result.error || 'Failed to create survey');\n      }\n    } catch (error) {\n      console.error('Submission error:', error);\n      setValidationError(error.message || 'Failed to submit survey');\n    }\n  };\n\n  return (\n    <div style={styles.container}>\n      {/* Survey Title Input */}\n      <input\n        type=\"text\"\n        placeholder=\"Enter Survey Title\"\n        value={surveyTitle}\n        onChange={(e) => setSurveyTitle(e.target.value)}\n        style={styles.input}\n      />\n\n      {/* Question Type Buttons */}\n      <div style={{ display: 'flex', justifyContent: 'center', gap: '0.5rem' }}>\n        <button\n          onClick={addMultipleChoiceQuestion}\n          style={{ ...styles.button, ...styles.primaryButton }}\n        >\n          Add Multiple Choice\n        </button>\n        <button\n          onClick={addRatingScaleQuestion}\n          style={{ ...styles.button, ...styles.secondaryButton }}\n        >\n          Add Rating Scale\n        </button>\n        <button\n          onClick={addConditionalQuestion}\n          style={{ ...styles.button, ...styles.secondaryButton }}\n        >\n          Add Conditional\n        </button>\n      </div>\n\n      {/* Questions List */}\n      <div>\n        {questions.map((question, index) => (\n          <div key={index} style={styles.questionItem}>\n            <div style={styles.questionHeader}>\n              <h3>Question {index + 1} ({question.type.replace('-', ' ')})</h3>\n              <button \n                onClick={() => removeQuestion(index)}\n                style={{ ...styles.button, ...styles.dangerButton }}\n              >\n                Remove\n              </button>\n            </div>\n\n            <input\n              type=\"text\"\n              placeholder=\"Enter question text\"\n              value={question.text}\n              onChange={(e) => updateQuestion(index, { text: e.target.value })}\n              style={styles.input}\n            />\n\n            <div style={styles.configSection}>\n              {question.type === 'multiple-choice' && (\n                <div>\n                  <h4>Options:</h4>\n                  {question.options.map((option, optionIndex) => (\n                    <div key={optionIndex} style={styles.optionItem}>\n                      <input\n                        type=\"text\"\n                        placeholder={`Option ${optionIndex + 1}`}\n                        value={option}\n                        onChange={(e) => updateQuestionOption(index, optionIndex, e.target.value)}\n                        style={{ ...styles.input, flex: 1, margin: 0 }}\n                      />\n                      {question.options.length > 2 && (\n                        <button \n                          onClick={() => removeQuestionOption(index, optionIndex)}\n                          style={{ ...styles.button, ...styles.dangerButton, padding: '0.3rem 0.6rem' }}\n                        >\n                          ×\n                        </button>\n                      )}\n                    </div>\n                  ))}\n                  <button \n                    onClick={() => addQuestionOption(index)}\n                    style={{ ...styles.button, ...styles.secondaryButton, marginTop: '0.5rem' }}\n                  >\n                    + Add Option\n                  </button>\n                </div>\n              )}\n\n              {question.type === 'rating-scale' && (\n                <div style={{ display: 'flex', gap: '1rem' }}>\n                  <div>\n                    <label style={styles.label}>Min Value:</label>\n                    <input\n                      type=\"number\"\n                      value={question.min}\n                      onChange={(e) => updateQuestion(index, { min: parseInt(e.target.value) })}\n                      style={styles.input}\n                    />\n                  </div>\n                  <div>\n                    <label style={styles.label}>Max Value:</label>\n                    <input\n                      type=\"number\"\n                      value={question.max}\n                      onChange={(e) => updateQuestion(index, { max: parseInt(e.target.value) })}\n                      style={styles.input}\n                    />\n                  </div>\n                </div>\n              )}\n\n              {question.type === 'conditional' && (\n                <div>\n                  <div style={{ marginBottom: '1rem' }}>\n                    <label style={styles.label}>Depends On Question:</label>\n                    <input\n                      type=\"text\"\n                      placeholder=\"Enter the text of the question this depends on\"\n                      value={question.dependsOn}\n                      onChange={(e) => updateConditionalQuestionDependency(index, e.target.value)}\n                      style={styles.input}\n                    />\n                  </div>\n                  <div>\n                    <label style={styles.label}>Condition:</label>\n                    <input\n                      type=\"text\"\n                      placeholder=\"Enter the required answer for the above question\"\n                      value={question.condition}\n                      onChange={(e) => updateConditionalQuestionCondition(index, e.target.value)}\n                      style={styles.input}\n                    />\n                  </div>\n                </div>\n              )}\n\n              <label style={{ display: 'flex', alignItems: 'center', gap: '0.5rem', marginTop: '1rem' }}>\n                <input\n                  type=\"checkbox\"\n                  checked={question.required}\n                  onChange={(e) => updateQuestion(index, { required: e.target.checked })}\n                />\n                Required Question\n              </label>\n            </div>\n          </div>\n        ))}\n      </div>\n\n      {validationError && (\n        <div style={styles.errorMessage}>\n          {validationError}\n        </div>\n      )}\n\n      <button \n        onClick={submitSurvey}\n        style={{ \n          ...styles.button, \n          ...styles.primaryButton,\n          width: '100%',\n          padding: '1rem',\n          fontSize: '1.1rem',\n          marginTop: '2rem'\n        }}\n      >\n        Save Survey\n      </button>\n    </div>\n  );\n};\n\nexport default SurveyBuilder;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}